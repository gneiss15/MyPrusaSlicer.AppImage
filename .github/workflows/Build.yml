name: Build PrusaSlicer AppImage
on:
  workflow_dispatch:
  push:
permissions:
  actions: write
  contents: write
defaults:
  run:
    shell: bash
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  linux:
    runs-on: ubuntu-latest
    #timeout-minutes: 180
    steps:
    - name: Setup Env
      run: |
        #set -x
        THIS_REPO_DIR=${GITHUB_WORKSPACE}/${GITHUB_REPOSITORY##*/}
        APT_CACHE_DIR=${THIS_REPO_DIR}/cache/var/cache/apt
        TOOLS_DIR=${THIS_REPO_DIR}/.github/tools
        PRUSA_REPO_DIR=${GITHUB_WORKSPACE}/PrusaSlicer

        for i in THIS_REPO_DIR APT_CACHE_DIR TOOLS_DIR PRUSA_REPO_DIR; do
          eval "r=\"\$$i\""
          echo "$i=$r" >> $GITHUB_ENV
        done

    - name: Clone this repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        path: '${{ env.THIS_REPO_DIR }}'

    - name: Check Releases and Skip Rest of Jobs if no new release
      id: Check_Releases
      run: |
        $TOOLS_DIR/CheckReleases.sh

    - name: Mod Apt
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      run: |
        $TOOLS_DIR/ModApt.sh

    - name: Commit all changed files back to the repository
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: Auto-Commit
        repository: ${{ env.THIS_REPO_DIR }}

    - name: Clone the PrusaSlicer repository
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      uses: actions/checkout@v4
      with:
        repository: prusa3d/PrusaSlicer
        ref: '${{ steps.Check_Releases.outputs.VERSION }}'
        path: '${{ env.PRUSA_REPO_DIR }}'

    - name: PrepareForBuild
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      run: |
        cd "$PRUSA_REPO_DIR"
        # Change Version-Info from ...UNKNOW to ...gneiss15
        sed -i "s/UNKNOWN/gneiss15/g" version.inc
        # Needed till Eigen Checksum fixed
        sed -i "s/URL_HASH.*//g" deps/+Eigen/Eigen.cmake
        #sed -i "s/e09b89aae054e9778ee3f606192ee76d645eec82c402c01c648b1fe46b6b9857/4815118c085ff1d5a21f62218a3b2ac62555e9b8d7bacd5093892398e7a92c4b/g" deps/+Eigen/Eigen.cmake
        
        # Download/Copy GMP
        rm -rf ./deps/build/destdir/*
        mkdir -p ./deps/download/GMP
        test -r ./deps/download/GMP/gmp-6.2.1.tar.bz2 || cp $TOOLS_DIR/gmp-6.2.1.tar.bz2 ./deps/download/GMP/gmp-6.2.1.tar.bz2
        #test -r ./deps/download/GMP/gmp-6.2.1.tar.bz2 || curl -o ./deps/download/GMP/gmp-6.2.1.tar.bz2 https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.bz2

    - name: BuildDependencies
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      run: |
        mkdir -p "$PRUSA_REPO_DIR/deps/build"
        cd "$PRUSA_REPO_DIR/deps/build"
        cmake .. -DDEP_WX_GTK3=ON -DDEP_DOWNLOAD_DIR=$(pwd)/../download -DBOOST_ROOT=$(pwd)/../build/destdir/usr/local
        make -j $(nproc)

    - name: BuildPrusaSlicer
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      run: |
        mkdir -p "$PRUSA_REPO_DIR/build"
        cd "$PRUSA_REPO_DIR/build"
        cmake .. -DSLIC3R_STATIC=1 -DSLIC3R_GTK=3 -DSLIC3R_PCH=OFF -DCMAKE_PREFIX_PATH=$(pwd)/../deps/build/destdir/usr/local -DCMAKE_INSTALL_PREFIX=/usr
        make -j $(nproc)
        sudo make install

    - name: MakeAppImage
      if: ! ${{ steps.Check_Releases.outputs.skip }} 
      run: |
        $TOOLS_DIR/MakeAppImage.sh

